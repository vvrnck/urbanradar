version: "3.9"
services:
  # Using Traefik to reverse proxy and route incoming requests port 5000 translates to entrypoint web on port 80
  traefik:
    image: traefik:v2.8
    command: --api.insecure=true --providers.docker --entrypoints.web.address=:80
    ports:
      - "4200:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  # postgres:
  #   image: postgres
  #   environment:
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=postgres


  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    image: postgres-db
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    # volumes:
    #   - ./database/init-schema.sql:/docker-entrypoint-initdb.d/init-schema.sql

  user-interface:
    build: ./user-interface
    env_file:
      - ./user-interface/.env
    # volumes:
    #   - ./user-interface/account:/frontend/app/account.txt
    expose:
      - 3000
    ports:
      - 3000:3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.userinterface.entrypoints=web
      - traefik.http.middlewares.stripprefix-auth.stripprefix.prefixes=/ui
      - traefik.http.routers.userinterface.rule=PathPrefix(`/ui`)
      - traefik.http.routers.userinterface.middlewares=stripprefix-auth@docker
    container_name: user-interface
  
  core-api:
    build: ./core-api
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://postgres:postgres@urbanradar-db-1:5432/postgres
    env_file:
      - ./core-api/.env
    volumes:
      - ./core-api:/app
    expose:
      - 8000
    labels:
      - traefik.enable=true
      - traefik.http.routers.coreservice.entrypoints=web
      - traefik.http.middlewares.stripprefix-core.stripprefix.prefixes=/core
      - traefik.http.routers.coreservice.rule=PathPrefix(`/core`)
      - traefik.http.routers.coreservice.middlewares=stripprefix-core@docker
    command: make migrate fixture start
    depends_on:
      - db
    ports:
      - 8000:8000

  # migrate:
  #   build: ./core-api
  #   environment:
  #     - SQLALCHEMY_DATABASE_URI=database
  #   command: flask db upgrade
  #   depends_on:
  #     - postgres
  #     - core-api
    
